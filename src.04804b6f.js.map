{"version":3,"sources":["apiService.js","index.js"],"names":["fetchImage","BASE_URL","KEY","value","page","fetch","then","response","json","refs","container","document","querySelector","gallery","searchBtn","undefined","searchForm","loadMoreBtn","searchValue","renderForm","insertAdjacentHTML","onSearch","e","preventDefault","currentTarget","elements","query","trim","children","length","innerHTML","remove","images","showImages","addLoadMoreBtn","catch","err","console","log","hits","list","map","webformatURL","likes","views","comments","downloads","tags","join","onLoadMoreClick","scrollToNewImages","addEventListener","scrollIntoView","block","behavior"],"mappings":";;;AAWeA,aAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,QAAAA,aAAAA,EAXf,MAAMC,EAAW,2BACXC,EAAM,qCAEZ,SAASF,EAAWG,EAAOC,GAClBC,OAAAA,SACFJ,+CAAsDE,UAAcC,qBAAwBF,KAC/FI,KAAKC,GACEA,EAASC,QAILR,IAAAA,EAAAA,EAAAA,QAAAA,QAAAA;;AC6Gd,aAxHD,QAAA,oBACA,IAAA,EAAA,EAAA,QAAA,iBAuHC,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GArHD,MAAMS,EAAO,CACXC,UAAWC,SAASC,cAAc,cAClCC,QAASF,SAASC,cAAc,YAChCE,eAAWC,EACXC,gBAAYD,EACZE,iBAAaF,GAGf,IAAIX,EAAO,EACPc,EAAc,GAMlB,SAASC,IAMPV,EAAKC,UAAUU,mBAAmB,aALpB,mPAQhB,SAASC,EAASC,GAChBA,EAAEC,iBAEEL,IAAgBI,EAAEE,cAAcC,SAASC,MAAMvB,MAAMwB,QAKzDT,EAAcI,EAAEE,cAAcC,SAASC,MAAMvB,MAAMwB,OACnDL,EAAEE,cAAcC,SAASC,MAAMvB,MAAQ,GACvCC,EAAO,EAEFc,IAEDT,EAAKI,QAAQe,SAASC,SACxBpB,EAAKI,QAAQiB,UAAY,GACzBrB,EAAKQ,YAAYc,WAGRb,EAAAA,EAAAA,SAAAA,EAAad,GACrBE,KAAK0B,IACJC,EAAWD,KAEZ1B,KAAK,KACJ4B,MAED5B,KAAK,KACCG,EAAKI,QAAQe,SAASC,SACzBpB,EAAKI,QAAQiB,UAAa,8CACtBrB,EAAKQ,aACPR,EAAKQ,YAAYc,YAItBI,MAAMC,GAAOC,QAAQC,IAAIF,MA9B1BC,QAAQC,IAAI,8CAiChB,SAASL,GAAW,KAAEM,IACdC,MAAAA,EAAOD,EACVE,IACC,EAAGC,aAAAA,EAAcC,MAAAA,EAAOC,MAAAA,EAAOC,SAAAA,EAAUC,UAAAA,EAAWC,KAAAA,iDACjB3C,+EAGNsC,WAAsBK,2HAMjDJ,kGAIAC,+FAIAC,sGAIAC,gCAKHE,KAAK,KAERvC,EAAKI,QAAQO,mBAAmB,YAAaoB,GAG/C,SAASS,EAAgB3B,GACvBlB,GAAQ,GAEGc,EAAAA,EAAAA,SAAAA,EAAad,GACrBE,KAAK0B,GAAUC,EAAWD,IAC1B1B,KAAK4C,GACLf,MAAMC,GAAOC,QAAQC,IAAIF,IAG9B,SAASF,IACPzB,EAAKI,QAAQO,mBACX,WACC,uDAEHX,EAAKQ,YAAcN,SAASC,cAAc,qBAC1CH,EAAKQ,YAAYkC,iBAAiB,QAASF,GAG7C,SAASC,IACSvC,SAASC,6BAA6BR,OAC5CgD,eAAe,CAAEC,MAAO,QAASC,SAAU,WAzGvDnC,IACAV,EAAKO,WAAaL,SAASC,cAAc,gBACzCH,EAAKO,WAAWmC,iBAAiB,SAAU9B","file":"src.04804b6f.js","sourceRoot":"../src","sourcesContent":["const BASE_URL = 'https://pixabay.com/api/';\nconst KEY = '22993210-edd192b19fd9d2ee0b0d8e9c4';\n\nfunction fetchImage(value, page) {\n  return fetch(\n    `${BASE_URL}?image_type=photo&orientation=horizontal&q=${value}&page=${page}&per_page=12&key=${KEY}`,\n  ).then(response => {\n    return response.json();\n  });\n}\n\nexport default fetchImage;\n","import './sass/main.scss';\nimport fetchImage from './apiService';\n\nconst refs = {\n  container: document.querySelector('.container'),\n  gallery: document.querySelector('.gallery'),\n  searchBtn: undefined,\n  searchForm: undefined,\n  loadMoreBtn: undefined,\n};\n\nlet page = 1;\nlet searchValue = '';\n\nrenderForm();\nrefs.searchForm = document.querySelector('#search-form');\nrefs.searchForm.addEventListener('submit', onSearch);\n\nfunction renderForm() {\n  const form = `<form class=\"search-form\" id=\"search-form\">\n      <input class =\"search__input\" type=\"text\" name=\"query\" autocomplete=\"off\" placeholder=\"Search images...\" />\n      <button type=\"submit\" class=\"search__button\">SEARCH</button>\n    </form>`;\n\n  refs.container.insertAdjacentHTML('afterbegin', form);\n}\n\nfunction onSearch(e) {\n  e.preventDefault();\n\n  if (searchValue === e.currentTarget.elements.query.value.trim()) {\n    console.log(' Ви питаетесь отправить дважди один запрос');\n    return;\n  }\n\n  searchValue = e.currentTarget.elements.query.value.trim();\n  e.currentTarget.elements.query.value = '';\n  page = 1;\n\n  if (!searchValue) return;\n\n  if (refs.gallery.children.length) {\n    refs.gallery.innerHTML = '';\n    refs.loadMoreBtn.remove();\n  }\n\n  fetchImage(searchValue, page)\n    .then(images => {\n      showImages(images);\n    })\n    .then(() => {\n      addLoadMoreBtn();\n    })\n    .then(() => {\n      if (!refs.gallery.children.length) {\n        refs.gallery.innerHTML = `<p class=\"text-no-search\">No results :(</p>`;\n        if (refs.loadMoreBtn) {\n          refs.loadMoreBtn.remove();\n        }\n      }\n    })\n    .catch(err => console.log(err));\n}\n\nfunction showImages({ hits }) {\n  const list = hits\n    .map(\n      ({ webformatURL, likes, views, comments, downloads, tags }) => `\n<li class=\"gallery__item\" data-page = '${page}'>\n\n<div class=\"gallery__img-wrapper\">\n  <img class=\"gallery__img\" src=\"${webformatURL}\" alt=\"${tags}\" />\n</div>\n\n  <div class=\"stats\">\n    <p class=\"stats-item\">\n      <i class=\"material-icons\">thumb_up</i>\n      ${likes}\n    </p>\n    <p class=\"stats-item\">\n      <i class=\"material-icons\">visibility</i>\n      ${views}\n    </p>\n    <p class=\"stats-item\">\n      <i class=\"material-icons\">comment</i>\n      ${comments}\n    </p>\n    <p class=\"stats-item\">\n      <i class=\"material-icons\">cloud_download</i>\n      ${downloads}\n    </p>\n  </div>\n</li>`,\n    )\n    .join(' ');\n\n  refs.gallery.insertAdjacentHTML('beforeend', list);\n}\n\nfunction onLoadMoreClick(e) {\n  page += 1;\n\n  fetchImage(searchValue, page)\n    .then(images => showImages(images))\n    .then(scrollToNewImages)\n    .catch(err => console.log(err));\n}\n\nfunction addLoadMoreBtn() {\n  refs.gallery.insertAdjacentHTML(\n    'afterend',\n    `<button class=\"load-more-button\">Load more</button>`,\n  );\n  refs.loadMoreBtn = document.querySelector('.load-more-button');\n  refs.loadMoreBtn.addEventListener('click', onLoadMoreClick);\n}\n\nfunction scrollToNewImages() {\n  let newImages = document.querySelector(`[data-page='${page}']`);\n  newImages.scrollIntoView({ block: 'start', behavior: 'smooth' });\n}\n"]}